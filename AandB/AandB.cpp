// Дани два масиви: А[M] і B[N] (M і N вводяться з клавіатури).Необхідно створити третій масив мінімально можливого розміру, у якому потрібно зібрати
//елементи масивів A і B, які не є загальними для них, без повторень.
#include <iostream>
#include<ctime>
using namespace std;

void inputArr(int* arr, int size) {//фукція заповення динамічного масиву 
    for (int i = 0; i < size; i++)
    {
        arr[i] = rand() % 20;

    }
}
void printArr(int* arr, int size) {//функція виводу масиву 
    for (int i = 0; i < size; i++)
    {
        cout << arr[i] << "\t";
    }
}
void SortAnoB(int* A, int m, int* B, int n, int*& C, int& NM) {//функція вибору чисел які передамо в 3-ій масив
    int ii = 0;//лічильник
    for (int i = 0; i < m; i++)
    {
        for (int j = 0; j < n; j++)
        {
            if (A[i] == B[j]) {//перевірка чи є такі елементи в масиві В
                break;
            }
            else if (j == n - 1) {//перевіряємо чи кількість перевірок досягла кількості елементів масиву В
                C[ii] = A[i];//заповнюємо масив С елементом з масиву А
                ii++;
            }
        }
    }
    for (int i = 0; i < n; i++)
    {
        for (int j = 0; j < m; j++)
        {
            if (B[i] == A[j]) {//перевірка чи є такі елементи в масиві А
                break;
            }
            else if (j == m - 1) {//перевіряємо чи кількість перевірок досягла кількості елементів масиву А
                C[ii] = B[i];//заповнюємо масив С елементами з масиву В
                ii++;
            }
        }
    }
    NM = ii;//новий розмір масиву С
    
}
void arr_uniq(int* C, int& NM)//функція видалення повторюваних елементів в кінцевому масиві 
{
    for (int i = 0; i < NM; i++)
    {
        for (int j = 0; j < NM; j++)
        {
            if (i != j)//перевірка чи ми не порівнюємо значення масиву під одним індексом 
            {
                if (C[i] == C[j])//перевірка чи знайшлись подібні едементи 
                {
                    swap(C[NM - 1], C[j]);//стираємо подібний елемент
                    NM--;//зменшуємо розмір масиву оскільки видалили повторюваний елемент
                }
            }
        }
    }
}

int main()
{
    srand(time(NULL));
    setlocale(0, "");
    int n = 1, m = 1;
    cout << "Введіть розмір масиву А, m = ";
    cin >> m;
    cout << "Введіть розмір масиву B, n = ";
    cin>> n;
    int NM = m + n;
    int* A = new int[m];//виділення динамічної пам'яті для масива
    int* B = new int[n];
    int* C = new int[NM]; 

    inputArr(A, m);//функція заповнення радомними числами масив
    cout << "\t\t\t\tПерший масив\n\n ";
    printArr(A, m);//функція виводу масиву 
    cout << endl;
    inputArr(B, n);//функція заповнення радомними числами масив
    cout << "\t\t\t\tДругий масив\n\n ";
    printArr(B, n);//функція виводу масиву 
    SortAnoB(A, m, B, n, C, NM);//функція вибору чисел які передамо в 3-ій масив
    cout << endl;
    arr_uniq(C, NM);//функція видалення повторюваних елементів в кінцевому масиві 
    cout << "\t\t\t\tТретій масив\n\n ";
    printArr(C, NM);//функція виводу масиву 

    delete[] A;//видалення дин.масиву
    delete[] B;
    delete[] C;

}

